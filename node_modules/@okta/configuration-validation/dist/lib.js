"use strict";Object.defineProperty(exports,"__esModule",{value:!0});
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
var e=function(t,o){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])})(t,o)};
/*!
 * Copyright (c) 2018-Present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */
var t=function(t){function o(){return null!==t&&t.apply(this,arguments)||this}return function(t,o){function r(){this.constructor=t}e(t,o),t.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}(o,t),o}(Error),o="You can copy it from the Okta Developer Console in the details for the Application you created. Follow these instructions to find it: https://bit.ly/finding-okta-app-credentials",r=new RegExp("^https://"),i=new RegExp("://"),n=/-admin.(okta|oktapreview|okta-emea).com/,s=new RegExp("/$");exports.assertAppBaseUrl=function(e){if(!e)throw new t("Your appBaseUrl is missing.");if(e.match(/{appBaseUrl}/))throw new t("Replace {appBaseUrl} with the base URL of your Application.");if(!e.match(i))throw new t("Your appBaseUrl must contain a protocol (e.g. https://). Current value: "+e+".");if(e.match(s))throw new t("Your appBaseUrl must not end in a '/'. Current value: "+e+".")},exports.assertClientId=function(e){if(!e)throw new t("Your client ID is missing. "+o);if(e.match(/{clientId}/))throw new t("Replace {clientId} with the client ID of your Application. "+o)},exports.assertClientSecret=function(e){if(!e)throw new t("Your client secret is missing. "+o);if(e.match(/{clientSecret}/))throw new t("Replace {clientSecret} with the client secret of your Application. "+o)},exports.assertIssuer=function(e,o){void 0===o&&(o={});var i="You can copy your domain from the Okta Developer Console. Follow these instructions to find it: https://bit.ly/finding-okta-domain";if(o.disableHttpsCheck){console.warn("Warning: HTTPS check is disabled. This allows for insecure configurations and is NOT recommended for production use.")}if(!e)throw new t("Your Okta URL is missing. "+i);if(!o.disableHttpsCheck&&!e.match(r))throw new t("Your Okta URL must start with https. Current value: "+e+". "+i);if(e.match(/{yourOktaDomain}/))throw new t("Replace {yourOktaDomain} with your Okta domain. "+i);if(e.match(n))throw new t("Your Okta domain should not contain -admin. Current value: "+e+". "+i)},exports.assertRedirectUri=function(e){if(!e)throw new t("Your redirect URI is missing.");if(e.match(/{redirectUri}/))throw new t("Replace {redirectUri} with the redirect URI of your Application.")},exports.buildConfigObject=function(e){var t=(e=e||{}).scopes;!t&&e.scope&&(t=Array.isArray(e.scope)?e.scope:e.scope.split(/\s+/));var o=e.tokenManager,r=void 0!==e.autoRenew?e.autoRenew:e.auto_renew,i=e.storage;void 0===i&&void 0===r||(o=Object.assign({autoRenew:r,storage:i},o||{}));var n=e.responseType||e.response_type;return"string"==typeof n&&n.indexOf(" ")>=0&&(n=n.split(/\s+/)),Object.assign({},e,{clientId:e.clientId||e.client_id,redirectUri:e.redirectUri||e.redirect_uri,responseType:n,scopes:t,tokenManager:o})};
